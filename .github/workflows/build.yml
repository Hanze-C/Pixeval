name: Build

on:
  workflow_dispatch: 
  push:
    branches:
      - "**"
    paths-ignore:
      - "**.md"
    tags-ignore:
      - "**"
  pull_request:
    paths-ignore:
      - "**.md"

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: true
      matrix:
        configuration: [Release]
        platform: ["x64", "x86", "arm64"]

    env:
      SOLUTION_NAME: "Pixeval.sln"
      PACKAGE_PROJECT_NAME: "src/Pixeval/Pixeval.csproj"
      PROJECT_RESTORE_PLATFORM: "x64"
      CONFIGURATION: ${{ matrix.configuration }}
      PLATFORM: ${{ matrix.platform }}
      DEFAULT_DIR: ${{ github.workspace }} # Default: D:\a\Pixeval\Pixeval\
      APPX_PACKAGE_DIR: ${{ github.workspace }}\AppxPackages
      MINVERBUILDMETADATA: build.${{ github.run_id }}.${{ github.run_attempt}}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
      
      - name: Restore Files
        shell: pwsh
        run: |
          dotnet restore $env:SOLUTION_NAME `
          -p:Platform=$env:PROJECT_RESTORE_PLATFORM `
          -p:Configuration=$env:CONFIGURATION `
          -p:RestoreLockedMode=true

      - uses: actions/cache@v4
        with:
          path: ./**/obj/${{ matrix.platform }}
          key: ${{ matrix.platform }}-obj-${{ hashFiles('**/project.assets.json') }}

      - name: Build Files
        shell: pwsh
        run: |
          msbuild $env:PACKAGE_PROJECT_NAME `
          -t:Publish `
          -p:Platform=$env:PLATFORM `
          -p:Configuration=$env:CONFIGURATION `
          -p:AppxBundle=Never `
          -p:WindowsPackageType=none `
          -p:WindowsAppSDKSelfContained=true `
          -getproperty:PublishDir
